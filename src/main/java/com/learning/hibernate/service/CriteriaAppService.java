package com.learning.hibernate.service;

import java.util.List;

import javax.persistence.criteria.CriteriaQuery;

import org.hibernate.Criteria;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;
import org.hibernate.criterion.Restrictions;

import com.learning.hibernate.model.UserDetails;

public class CriteriaAppService {

	public static void main(String[] args) {
		SessionFactory sf = new Configuration().configure().buildSessionFactory();
		// Opening session
		Session session = sf.openSession();

		Criteria criteria = session.createCriteria(UserDetails.class);
		criteria.add(Restrictions.gt("id", 5))						// This is also nice example of decorator pattern
				.add(Restrictions.eq("userName", "User5"));			// decorate the result generated by previous API

		List<UserDetails> list1 = (List<UserDetails>)criteria.list();
		System.out.println("User with id greater than 5: "+list1);

		Criteria criteria2 = session.createCriteria(UserDetails.class);
		criteria2.add(Restrictions.or(Restrictions.between("id", 1, 4),
				Restrictions.or(Restrictions.between("id", 7, 10))));
		List<UserDetails> list2 = (List<UserDetails>)criteria2.list();
		System.out.println("User with id 1-4 & 7-10: "+list2);

		// Closing Session
		session.close();
	}

}
